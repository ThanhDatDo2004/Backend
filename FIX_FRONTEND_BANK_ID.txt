üî¥ FRONTEND BUG: Wrong Field Name
==================================

BACKEND RETURNS:
{
  "ShopBankID": 15,     ‚Üê This is the ID!
  "ShopCode": 2,
  "BankName": "BIDV",
  "AccountNumber": "08668457999",
  "IsDefault": "Y"
}

FRONTEND USING:
bank_id: banks[0].id    ‚Üê WRONG! This is undefined!

FIX:
====

BEFORE (WRONG):
const banks = await fetchShopBankAccounts();
await createPayoutRequestApi({
  amount: Math.floor(amount),
  bank_id: banks[0].id,     ‚Üê WRONG! .id doesn't exist
  note: `...`,
  password: payoutPassword,
});

AFTER (CORRECT):
const banks = await fetchShopBankAccounts();
await createPayoutRequestApi({
  amount: Math.floor(amount),
  bank_id: banks[0].ShopBankID,  ‚Üê CORRECT! Use ShopBankID
  note: `...`,
  password: payoutPassword,
});

WHERE TO FIND:
==============
Search for: "banks[0].id" or ".id" in your payout form code
Replace with: ".ShopBankID"

EXPLANATION:
============
Backend SELECT returns:
- ShopBankID (field name in database)
- NOT "id" (JavaScript convention)

Frontend must use exact field names from API response!

Frontend should either:
1. Map response: id: item.ShopBankID
2. Or use: banks[0].ShopBankID directly

ALSO CHECK:
===========
When displaying bank account to user, make sure:
- Show banks[0].BankName ‚úÖ
- Show banks[0].AccountNumber ‚úÖ
- Show banks[0].AccountHolder ‚úÖ
- Use banks[0].ShopBankID when sending ‚úÖ

TEST:
1. Fix code
2. Test again
3. Should get 201 Created!

