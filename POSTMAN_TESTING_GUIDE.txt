=== POSTMAN COMPLETE PAYMENT FLOW GUIDE ===

TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySUQiOjEsIkxldmVsQ29kZSI6MSwiRnVsbE5hbWUiOiLEkOG7lyBUaMOgbmggxJDhuqF0IiwiRW1haWwiOiJrdWJqbWlzdTE5OTlAZ21haWwuY29tIiwiUGhvbmVOdW1iZXIiOm51bGwsInVzZXJfY29kZSI6MSwibGV2ZWxfY29kZSI6MSwiSXNBY3RpdmUiOjEsImlzQWN0aXZlIjoxLCJpYXQiOjE3NjA3MTkxNjgsImV4cCI6MTc2MDgwNTU2OH0.fLJ0DyjdvyUdCCkzNIm9jrurThNAMShvSGTIyRseuOM

=== STEP 1: CREATE BOOKING ===
Method: POST
URL: http://localhost:5050/api/bookings/create
Auth: Bearer {TOKEN}
Body:
{
  "fieldCode": 1,
  "playDate": "2025-10-25",
  "startTime": "14:00:00",
  "endTime": "15:00:00"
}

Expected Response (200 OK):
{
  "success": true,
  "data": {
    "bookingCode": 2,
    "totalPrice": 100000,
    "fieldName": "Sân Cầu Lông #1"
  }
}

Note: Save `bookingCode` = 2 for next steps

---

=== STEP 2: INITIATE PAYMENT (Khởi tạo thanh toán) ===
Method: POST
URL: http://localhost:5050/api/payments/bookings/2/initiate
Auth: Bearer {TOKEN}
Body:
{
  "payment_method": "bank_transfer"
}

Expected Response (200 OK):
{
  "success": true,
  "data": {
    "paymentID": 2,
    "qr_code": "https://test-payment.momo.vn/v2/gateway/pay?t=...",
    "momo_url": "https://test-payment.momo.vn/v2/gateway/pay?t=...",
    "amount": 100000,
    "expiresIn": 900,
    "bookingId": 2
  }
}

Note: 
- Save `paymentID` = 2 for next steps
- Copy `momo_url` to access Momo test payment page
- MomoOrderId will be saved as "BK2" in database

---

=== STEP 3: GO TO MOMO TEST PAGE ===
1. Copy `momo_url` from Step 2 response
2. Open in browser OR use test card:
   Card: 9704 0000 0000 0018
   Name: NGUYEN VAN A
   Expiry: 03/07
   OTP: OTP
3. Complete payment

After completing payment on Momo page, webhook should be triggered automatically
(Momo calls http://localhost:5050/api/payments/webhook/momo-callback)

---

=== STEP 4: CHECK PAYMENT STATUS (Kiểm tra trạng thái) ===
Method: GET
URL: http://localhost:5050/api/payments/bookings/2/status
No Auth required
No Body

Expected Response (200 OK):
{
  "success": true,
  "data": {
    "paymentID": 2,
    "bookingCode": 2,
    "bookingId": 2,
    "amount": 100000,
    "status": "paid",
    "paidAt": "2025-10-20T10:30:00.000Z"
  }
}

---

=== STEP 5: GET PAYMENT RESULT (Lấy kết quả thanh toán) ===
Method: GET
URL: http://localhost:5050/api/payments/result/2
No Auth required
No Body

Expected Response (200 OK):
{
  "success": true,
  "data": {
    "booking_code": 2,
    "transaction_id": "TX-2",
    "payment_status": "paid",
    "field_code": 1,
    "field_name": "Sân Cầu Lông #1",
    "total_price": 100000,
    "slots": [...],
    "payment_method": "bank_transfer",
    "paid_at": "2025-10-20T10:30:00.000Z"
  }
}

---

=== ALTERNATIVE: MANUAL WEBHOOK TEST (Nếu Momo không callback tự động) ===
Method: POST
URL: http://localhost:5050/api/payments/webhook/momo-callback
No Auth required
Body:
{
  "orderId": "BK2",
  "amount": 100000,
  "orderInfo": "Payment for sports field",
  "payStatus": 0,
  "transId": "MOMO-TRANS-2025-TEST",
  "requestId": "REQ-2025-TEST",
  "resultCode": 0,
  "resultMessage": "Success"
}

Expected Response (200 OK):
{
  "success": true,
  "data": {
    "success": true,
    "paymentID": 2,
    "bookingCode": 2,
    "amountToPay": 100000,
    ...
  }
}

---

=== STEP 6: CONFIRM PAYMENT (DEV ENDPOINT - Alternative to webhook) ===
Method: POST
URL: http://localhost:5050/api/payments/2/confirm
Auth: Bearer {TOKEN}
Body: {}

Expected Response (200 OK):
{
  "success": true,
  "data": {
    "success": true,
    "paymentID": 2,
    "bookingCode": 2,
    "amountToPay": 100000,
    "platformFee": 5000,
    "netToShop": 95000
  }
}

---

=== ERROR CODES & FIXES ===

❌ "Không tìm thấy booking"
   → Check: BookingCode must exist and match in database
   → Fix: Create booking first (Step 1)

❌ "Không tìm thấy payment"  
   → Check: Payment record must exist for bookingCode
   → Fix: Run initiate payment first (Step 2)

❌ "Data truncated for column 'PaymentMethod'"
   → Check: payment_method must be one of: bank_transfer, card, ewallet, cash
   → Fix: Use "bank_transfer" instead of "momo"

❌ "Foreign key constraint fails"
   → Check: Payment must be found before logging webhook
   → Fix: Already fixed in code - orderId/transId lookup improved

❌ "BookingCode phải là số"
   → Check: BookingCode can be numeric (1, 2, 3) or alphanumeric (BK-123)
   → Fix: Both formats accepted now

---

=== KEY IMPROVEMENTS IN THIS VERSION ===

✅ Payment lookup by MomoOrderId (orderId from Momo)
✅ Payment lookup by MomoTransactionID (transId from webhook)
✅ Webhook idempotency - won't duplicate if called twice
✅ Proper flow: Booking → Payment → Momo → Webhook → Result
✅ All error codes fixed
✅ Booking creation endpoint added

---

=== TESTING CHECKLIST ===

[ ] Step 1: Create Booking - bookingCode = 2
[ ] Step 2: Initiate Payment - paymentID = 2, MomoOrderId = "BK2"
[ ] Step 3: Test payment on Momo page
[ ] Step 4: Check payment status - should show "paid"
[ ] Step 5: Get payment result - full booking details
[ ] (Optional) Step 6: Manual webhook confirmation
[ ] Check Database:
    - Bookings table: BookingCode 2 with PaymentStatus = 'paid'
    - Payments_Admin table: PaymentID 2 with MomoOrderId = 'BK2', MomoTransactionID = transId
    - Shop_Wallets: Updated with payment amount

