╔══════════════════════════════════════════════════════════════════════════════╗
║                    DELETE FIELD FOREIGN KEY FIX SUMMARY                      ║
╚══════════════════════════════════════════════════════════════════════════════╝

PROBLEM ENCOUNTERED
───────────────────────────────────────────────────────────────────────────────
When deleting a field at DELETE /api/shops/me/fields/30, the API returned:

  Status: 500
  Error: "Cannot delete or update a parent row: a foreign key constraint fails 
         (`thuere`.`Field_Pricing`, CONSTRAINT `FK_FieldPricing_Fields` 
         FOREIGN KEY (`FieldCode`) REFERENCES `Fields` (`FieldCode`))"

ROOT CAUSE
───────────────────────────────────────────────────────────────────────────────
Database schema has Foreign Key constraint:

    ┌─────────────────┐           ┌──────────────────┐
    │ Fields (Parent) │◄──────────│ Field_Pricing    │
    │                 │  FK       │ (Child)          │
    │ FieldCode (PK)  │           │ FieldCode (FK)   │
    └─────────────────┘           └──────────────────┘

To delete a parent record (Fields), all child records (Field_Pricing) must be
deleted first. The original code didn't handle this.

SOLUTION IMPLEMENTED
───────────────────────────────────────────────────────────────────────────────

1. ADDED: deleteAllPricingForField() method in backend/src/models/field.model.ts
   
   Purpose: Delete all Field_Pricing records for a given field
   
   async deleteAllPricingForField(fieldCode: number) {
     const query = `DELETE FROM Field_Pricing WHERE FieldCode = ?`;
     const result = await queryService.execQuery(query, [fieldCode]);
     if (typeof result === "boolean") return result ? 1 : 0;
     return Number((result as ResultSetHeader)?.affectedRows ?? 0);
   }

2. UPDATED: deleteFieldForShop() in backend/src/services/field.service.ts
   
   Changed deletion sequence FROM:
     await fieldModel.deleteAllImagesForField(fieldCode);
     const ok = await fieldModel.hardDeleteField(fieldCode);
   
   Changed TO:
     await fieldModel.deleteAllImagesForField(fieldCode);
     await fieldModel.deleteAllPricingForField(fieldCode);  ← NEW
     const ok = await fieldModel.hardDeleteField(fieldCode);

DELETION DEPENDENCY DIAGRAM
───────────────────────────────────────────────────────────────────────────────

                      ┌──────────────┐
                      │  Field_Images│  (Deleted 1st)
                      │  (FK to      │
                      │   Fields)    │
                      └──────────────┘
                             │
                             ▼
                      ┌──────────────┐
                      │   Fields     │  (Deleted 3rd)
                      │  (Parent)    │
                      └──────────────┘
                             ▲
                             │
                      ┌──────────────┐
                      │Field_Pricing │  (Deleted 2nd)
                      │  (FK to      │
                      │   Fields)    │
                      └──────────────┘

EXPECTED BEHAVIOR AFTER FIX
───────────────────────────────────────────────────────────────────────────────

✓ DELETE /api/shops/me/fields/30 now returns:
  
  Status: 200
  Response: {
    "success": true,
    "statusCode": 200,
    "data": {
      "deleted": true
    },
    "error": null,
    "message": "Xóa sân thành công"
  }

✓ All associated pricing records are automatically deleted
✓ No foreign key constraint violations
✓ Field can be successfully removed from database

FILES MODIFIED
───────────────────────────────────────────────────────────────────────────────
- backend/src/models/field.model.ts      (added deleteAllPricingForField)
- backend/src/services/field.service.ts  (call deleteAllPricingForField)

NO BREAKING CHANGES
───────────────────────────────────────────────────────────────────────────────
- API endpoint remains the same
- Response format unchanged
- No changes to other functionality
- Soft delete (mode=soft) behavior unchanged
