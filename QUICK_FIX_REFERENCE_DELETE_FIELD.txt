╔════════════════════════════════════════════════════════════════════════════╗
║        DELETE FIELD FIX - QUICK REFERENCE CARD                            ║
╚════════════════════════════════════════════════════════════════════════════╝

🔴 PROBLEM
──────────────────────────────────────────────────────────────────────────────
DELETE /api/shops/me/fields/30 
Response: 500 Error
Message: "Cannot delete or update a parent row: foreign key constraint fails"

🟢 SOLUTION 
──────────────────────────────────────────────────────────────────────────────
Files Changed: 2
Lines Added: 12
Impact: Zero breaking changes

FILE 1: backend/src/models/field.model.ts
────────────────────────────────────────────
Added at line 386:

  async deleteAllPricingForField(fieldCode: number) {
    const query = `DELETE FROM Field_Pricing WHERE FieldCode = ?`;
    const result = await queryService.execQuery(query, [fieldCode]);
    if (typeof result === "boolean") return result ? 1 : 0;
    return Number((result as ResultSetHeader)?.affectedRows ?? 0);
  }

FILE 2: backend/src/services/field.service.ts
──────────────────────────────────────────────
Added at line 538:

  await fieldModel.deleteAllPricingForField(fieldCode);

Complete sequence (lines 537-540):

  await fieldModel.deleteAllImagesForField(fieldCode);
  await fieldModel.deleteAllPricingForField(fieldCode);  ← NEW LINE
  const ok = await fieldModel.hardDeleteField(fieldCode);
  return ok ? { deleted: true } : null;

✅ WHAT TO DO
──────────────────────────────────────────────────────────────────────────────

1. Stop backend server (Ctrl+C)
2. Restart backend:
   cd backend
   npm run dev
   
3. Test deletion at http://localhost:5173/shop/fields
   Click "Xóa Sân" on any field

✓ SUCCESS INDICATORS
──────────────────────────────────────────────────────────────────────────────
□ DELETE request returns 200 status
□ Response: { "success": true, "statusCode": 200, ... }
□ Field disappears from list immediately
□ No error in browser console
□ Backend logs show no errors

🔍 HOW TO VERIFY
──────────────────────────────────────────────────────────────────────────────

Check code is in place:
  grep "deleteAllPricingForField" backend/src/models/field.model.ts
  grep "deleteAllPricingForField" backend/src/services/field.service.ts

Test with cURL:
  curl -X DELETE http://localhost:5050/api/shops/me/fields/30 \
    -H "Authorization: Bearer TOKEN"

Check database:
  SELECT COUNT(*) FROM Field_Pricing WHERE FieldCode = 30;
  -- Should return 0 after deletion

📚 WHY THIS WORKS
──────────────────────────────────────────────────────────────────────────────

Database has foreign key:
  Field_Pricing.FieldCode → Fields.FieldCode

Cannot delete Fields if Field_Pricing still references it.

Correct deletion order:
  1. Delete Field_Images (references Fields)
  2. Delete Field_Pricing (references Fields) ← WAS MISSING!
  3. Delete Fields

Now all references are cleaned up before parent deletion.

🎯 EXPECTED RESULT
──────────────────────────────────────────────────────────────────────────────

BEFORE:
  DELETE /api/shops/me/fields/30
  → 500 Error (FK constraint)
  → Field remains in database
  → Pricing still attached

AFTER:
  DELETE /api/shops/me/fields/30
  → 200 OK
  → Field deleted from database
  → Pricing auto-deleted
  → Images auto-deleted
  → List refreshes

═══════════════════════════════════════════════════════════════════════════════
Status: ✅ READY FOR TESTING
Last Updated: October 20, 2025
═══════════════════════════════════════════════════════════════════════════════
