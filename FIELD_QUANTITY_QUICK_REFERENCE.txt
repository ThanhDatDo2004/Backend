╔════════════════════════════════════════════════════════════════════════════╗
║          Field_Quantity Table - Quick Reference (PascalCase)              ║
╚════════════════════════════════════════════════════════════════════════════╝

TABLE SCHEMA
────────────────────────────────────────────────────────────────────────────────

CREATE TABLE Field_Quantity (
  QuantityID INT AUTO_INCREMENT PRIMARY KEY,
  FieldCode INT NOT NULL,
  QuantityNumber INT NOT NULL,
  Status ENUM('available', 'maintenance', 'inactive') DEFAULT 'available',
  CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  
  FOREIGN KEY (FieldCode) REFERENCES Fields(FieldCode) ON DELETE CASCADE,
  UNIQUE KEY UniqueFieldQuantity (FieldCode, QuantityNumber)
);


COLUMN NAMING (PascalCase)
────────────────────────────────────────────────────────────────────────────────

Database Column    →    TypeScript Property    →    Description
────────────────────────────────────────────────────────────────────────────────
QuantityID         →    quantity_id            →    Unique court instance ID
FieldCode          →    field_code             →    FK to Fields table
QuantityNumber     →    quantity_number        →    Court number (1,2,3...)
Status             →    status                 →    'available'|'maintenance'|'inactive'
CreatedAt          →    created_at             →    When created
UpdatedAt          →    updated_at             →    Last update time


SAMPLE DATA
────────────────────────────────────────────────────────────────────────────────

Field "Tennis" (FieldCode=30) - 2 courts:
┌────────────┬───────────┬────────────────┬───────────┐
│ QuantityID │ FieldCode │ QuantityNumber │ Status    │
├────────────┼───────────┼────────────────┼───────────┤
│ 15         │ 30        │ 1              │ available │
│ 16         │ 30        │ 2              │ available │
└────────────┴───────────┴────────────────┴───────────┘

Field "Badminton" (FieldCode=31) - 3 courts:
┌────────────┬───────────┬────────────────┬──────────────┐
│ QuantityID │ FieldCode │ QuantityNumber │ Status       │
├────────────┼───────────┼────────────────┼──────────────┤
│ 17         │ 31        │ 1              │ available    │
│ 18         │ 31        │ 2              │ available    │
│ 19         │ 31        │ 3              │ maintenance  │
└────────────┴───────────┴────────────────┴──────────────┘


KEY RELATIONSHIPS
────────────────────────────────────────────────────────────────────────────────

Field_Quantity                         Fields
┌──────────────────────────┐          ┌──────────────────────────┐
│ QuantityID (PK)          │          │ FieldCode (PK)           │
│ FieldCode (FK) ────────┼──────────► │ FieldName: "Tennis"      │
│ QuantityNumber         │          │ ShopCode                 │
│ Status                 │          └──────────────────────────┘
└──────────────────────────┘

Field_Quantity                         Bookings
┌──────────────────────────┐          ┌──────────────────────────┐
│ QuantityID (PK)          │◄─────────┤ QuantityID (FK)          │
│ FieldCode               │          │ BookingCode              │
│ QuantityNumber          │          │ PlayDate                 │
│ Status                  │          │ StartTime, EndTime       │
└──────────────────────────┘          └──────────────────────────┘


USEFUL QUERIES
────────────────────────────────────────────────────────────────────────────────

1. Get all courts for a field
   SELECT QuantityID, QuantityNumber, Status
   FROM Field_Quantity
   WHERE FieldCode = 30;

2. Get available courts
   SELECT QuantityID, QuantityNumber
   FROM Field_Quantity
   WHERE FieldCode = 30 AND Status = 'available';

3. Check which courts are free at specific time
   SELECT fq.QuantityID, fq.QuantityNumber
   FROM Field_Quantity fq
   LEFT JOIN Bookings b ON fq.QuantityID = b.QuantityID
     AND b.PlayDate = '2025-10-20'
     AND b.StartTime < '09:00' AND b.EndTime > '08:00'
   WHERE fq.FieldCode = 30
     AND fq.Status = 'available'
     AND b.BookingCode IS NULL;

4. Count courts by status
   SELECT Status, COUNT(*) as Count
   FROM Field_Quantity
   WHERE FieldCode = 30
   GROUP BY Status;


CONSTRAINTS
────────────────────────────────────────────────────────────────────────────────

Primary Key:
  QuantityID (AUTO_INCREMENT)

Foreign Key:
  FieldCode → Fields(FieldCode) ON DELETE CASCADE
  (If Field deleted → All its Quantity records deleted)

Unique Constraint:
  (FieldCode, QuantityNumber)
  Cannot have 2 entries for same (Field, QuantityNumber)


INDEXES
────────────────────────────────────────────────────────────────────────────────

CREATE INDEX IdxFieldCodeStatus ON Field_Quantity(FieldCode, Status);
CREATE INDEX IdxQuantityStatus ON Field_Quantity(QuantityNumber, Status);

Purpose: Speed up filtering by FieldCode and Status


STATUS VALUES
────────────────────────────────────────────────────────────────────────────────

'available'    → Court can be booked
'maintenance'  → Court under maintenance, cannot book
'inactive'     → Court disabled/closed


CRUD OPERATIONS
────────────────────────────────────────────────────────────────────────────────

CREATE:
  INSERT INTO Field_Quantity (FieldCode, QuantityNumber, Status)
  VALUES (30, 1, 'available');

READ:
  SELECT * FROM Field_Quantity WHERE FieldCode = 30;

UPDATE:
  UPDATE Field_Quantity SET Status = 'maintenance' WHERE QuantityID = 15;

DELETE:
  DELETE FROM Field_Quantity WHERE QuantityID = 15;


TYPESCRIPT TYPES
────────────────────────────────────────────────────────────────────────────────

interface FieldQuantityRow {
  quantity_id: number;
  field_code: number;
  quantity_number: number;
  status: 'available' | 'maintenance' | 'inactive';
  created_at: string;
  updated_at: string;
}


DATA INSERTION EXAMPLE
────────────────────────────────────────────────────────────────────────────────

When user creates Field "Tennis" with 2 courts:

POST /api/shops/me/fields
{
  "fieldName": "Tennis",
  "quantity": 2
}

Backend creates:
  1. Fields table: 1 row (FieldCode=30, FieldName="Tennis")
  2. Field_Quantity table:
     - Row 1: QuantityID=15, FieldCode=30, QuantityNumber=1
     - Row 2: QuantityID=16, FieldCode=30, QuantityNumber=2


BOOKING WITH QUANTITY
────────────────────────────────────────────────────────────────────────────────

User books Tennis court 1 at 08:00-09:00:

INSERT INTO Bookings (FieldCode, QuantityID, PlayDate, StartTime, EndTime)
VALUES (30, 15, '2025-10-20', '08:00', '09:00');
       ↑   ↑
    Field  Court 1 (QuantityID=15)


SUMMARY TABLE
────────────────────────────────────────────────────────────────────────────────

Item                    Value
────────────────────────────────────────────────────────────────────────────────
Table Name              Field_Quantity
Primary Key             QuantityID (AUTO_INCREMENT)
Foreign Key             FieldCode → Fields(FieldCode)
Unique Constraint       (FieldCode, QuantityNumber)
Delete Behavior         ON DELETE CASCADE
Max Quantity per Field  No limit
Status Types            3 (available, maintenance, inactive)
Linked Table            Bookings (QuantityID)

═══════════════════════════════════════════════════════════════════════════════
